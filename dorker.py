#!/usr/bin/python
import requests
import argparse
import re
import time
import json
from colorama import Fore, Style, init

def dork(target):
    init()
    baseUrl = 'https://www.google.com/search?q=site:'
    targetUrl = target
    noMatch1 = '(\W|^)did\snot\smatch\sany(\W|$)'
    noMatch2 = '(\W|^)No\sresults\sfound\sfor(\W|$)'
    captcha = '(\W|^)unusual\straffic(\W|$)'
    exposedDocuments = targetUrl + '+ext:doc+|+ext:docx+|+ext:odt+|+ext:rtf+|+ext:sxw+|+ext:psw+|+ext:ppt+|+ext:pptx+|+ext:pps+|+ext:csv'
    directoryListings = targetUrl + '+intitle:index.of'
    configFiles = targetUrl + '+ext:xml+|+ext:conf+|+ext:cnf+|+ext:reg+|+ext:inf+|+ext:rdp+|+ext:cfg+|+ext:txt+|+ext:ora+|+ext:ini+|+ext:env'
    databaseFiles = targetUrl + '+ext:sql+|+ext:dbf+|+ext:mdb'
    logFiles = targetUrl + '+ext:log'
    backupFiles = targetUrl + '+ext:bkf+|+ext:bkp+|+ext:bak+|+ext:old+|+ext:backup'
    loginPages = targetUrl + '+inurl:login+|+inurl:signin+|+intitle:Login+|+intitle:"sign+in"+|+inurl:auth'
    sqlErrors = targetUrl + '+intext:"sql+syntax+near"+|+intext:"syntax+error+has+occurred"+|+intext:"incorrect+syntax+near"+|+intext:"unexpected+end+of+SQL+command"+|+intext:"Warning:+mysql_connect()"+|+intext:"Warning:+mysql_query()"+|+intext:"Warning:+pg_connect()"'
    phpErrors = targetUrl + '+"PHP+Parse+error"+|+"PHP+Warning"+|+"PHP+Error"'
    phpinfo = targetUrl + '+ext:php+intitle:phpinfo+"published+by+the+PHP+Group"'
    pastebin = 'pastebin.com%20|%20site:paste2.org%20|%20site:pastehtml.com%20|%20site:slexy.org%20|%20site:snipplr.com%20|%20site:snipt.net%20|%20site:textsnip.com%20|%20site:bitpaste.app%20|%20site:justpaste.it%20|%20site:heypasteit.com%20|%20site:hastebin.com%20|%20site:dpaste.org%20|%20site:dpaste.com%20|%20site:codepad.org%20|%20site:jsitor.com%20|%20site:codepen.io%20|%20site:jsfiddle.net%20|%20site:dotnetfiddle.net%20|%20site:phpfiddle.org%20|%20site:ide.geeksforgeeks.org%20|%20site:repl.it%20|%20site:ideone.com%20|%20site:paste.debian.net%20|%20site:paste.org%20|%20site:paste.org.ru%20|%20site:codebeautify.org%20%20|%20site:codeshare.io%20|%20site:trello.com%20"' + targetUrl + '"'
    github = 'github.com%20|%20site:gitlab.com%20"' + targetUrl + '"'
    stackoverflow = 'stackoverflow.com%20"' + targetUrl + '"'
    signupPages = targetUrl + '+inurl:signup+|+inurl:register+|+intitle:Signup'
    # Add any additional google dork strings in new variables starting here
    
    # Dork for exposed documents that might be interesting
    x = requests.get(baseUrl + exposedDocuments)
    search1 = re.search(noMatch1, x.content.decode('utf-8','ignore'))
    search2 = re.search(noMatch2, x.content.decode('utf-8','ignore'))
    if search3:
        print(Fore.YELLOW + "Google's captcha interfered while dorking for exposed documents at " + targetUrl + ". Please manually retry.")
        print(Fore.YELLOW + baseUrl + exposedDocuments)
    elif search1 or search2:
        print(Fore.GREEN + "No exposed documents found for " + targetUrl)
    else:
        print(Fore.RED + "Exposed documents found:\n" + baseUrl + exposedDocuments)

    # Dork for exposed directory listings
    time.sleep(5) #To reduce the amount of reCAPTCHA prompts from Google
    x = requests.get(baseUrl + directoryListings)
    search1 = re.search(noMatch1, x.content.decode('utf-8','ignore'))
    search2 = re.search(noMatch2, x.content.decode('utf-8','ignore'))
    search3 = re.search(captcha, x.content.decode('utf-8','ignore'))
    if search3:
        print(Fore.YELLOW + "Google's captcha interfered while dorking for directory listings at " + targetUrl + ". Please manually retry.")
        print(Fore.YELLOW + baseUrl + directoryListings)
    elif search1 or search2:
        print(Fore.GREEN + "No exposed directory listings found for " + targetUrl)
    else:
        print(Fore.RED + "Exposed directory listings found:\n" + baseUrl + directoryListings)
    
    # Dork for exposed config files
    time.sleep(5)
    x = requests.get(baseUrl + configFiles)
    search1 = re.search(noMatch1, x.content.decode('utf-8','ignore'))
    search2 = re.search(noMatch2, x.content.decode('utf-8','ignore'))
    search3 = re.search(captcha, x.content.decode('utf-8','ignore'))
    if search3:
        print(Fore.YELLOW + "Google's captcha interfered while dorking for exposed config files at " + targetUrl + ". Please manually retry.")
        print(Fore.YELLOW + baseUrl + configFiles)
    elif search1 or search2:
        print(Fore.GREEN + "No exposed config files found for " + targetUrl)
    else:
        print(Fore.RED + "Exposed config files found:\n" + baseUrl + configFiles)

    # Dork for exposed database files
    time.sleep(5)
    x = requests.get(baseUrl + databaseFiles)
    search1 = re.search(noMatch1, x.content.decode('utf-8','ignore'))
    search2 = re.search(noMatch2, x.content.decode('utf-8','ignore'))
    search3 = re.search(captcha, x.content.decode('utf-8','ignore'))
    if search3:
        print(Fore.YELLOW + "Google's captcha interfered while dorking for exposed database files at " + targetUrl + ". Please manually retry.")
        print(Fore.YELLOW + baseUrl + databaseFiles)
    elif search1 or search2:
        print(Fore.GREEN + "No exposed database files found for " + targetUrl)
    else:
        print(Fore.RED + "Exposed database files found:\n" + baseUrl + databaseFiles)
    
    # Dork for exposed log files
    time.sleep(5)
    x = requests.get(baseUrl + logFiles)
    search1 = re.search(noMatch1, x.content.decode('utf-8','ignore'))
    search2 = re.search(noMatch2, x.content.decode('utf-8','ignore'))
    search3 = re.search(captcha, x.content.decode('utf-8','ignore'))
    if search3:
        print(Fore.YELLOW + "Google's captcha interfered while dorking for exposed log files at " + targetUrl + ". Please manually retry.")
        print(Fore.YELLOW + baseUrl + logFiles)
    elif search1 or search2:
        print(Fore.GREEN + "No exposed log files found for " + targetUrl)
    else:
        print(Fore.RED + "Exposed log files found:\n" + baseUrl + logFiles)
    
    # Dork for exposed backup files
    time.sleep(5)
    x = requests.get(baseUrl + backupFiles)
    search1 = re.search(noMatch1, x.content.decode('utf-8','ignore'))
    search2 = re.search(noMatch2, x.content.decode('utf-8','ignore'))
    search3 = re.search(captcha, x.content.decode('utf-8','ignore'))
    if search3:
        print(Fore.YELLOW + "Google's captcha interfered while dorking for exposed backup files at " + targetUrl + ". Please manually retry.")
        print(Fore.YELLOW + baseUrl + backupFiles)
    elif search1 or search2:
        print(Fore.GREEN + "No exposed backup files found for " + targetUrl)
    else:
        print(Fore.RED + "Exposed backup files found:\n" + baseUrl + backupFiles)
    
    # Dork for login pages
    time.sleep(5)
    x = requests.get(baseUrl + loginPages)
    search1 = re.search(noMatch1, x.content.decode('utf-8','ignore'))
    search2 = re.search(noMatch2, x.content.decode('utf-8','ignore'))
    search3 = re.search(captcha, x.content.decode('utf-8','ignore'))
    if search3:
        print(Fore.YELLOW + "Google's captcha interfered while dorking for login pages at " + targetUrl + ". Please manually retry.")
        print(Fore.YELLOW + baseUrl + loginPages)
    elif search1 or search2:
        print(Style.RESET_ALL + "No login pages found for " + targetUrl)
    else:
        print(Style.RESET_ALL + "Login pages found:\n" + baseUrl + loginPages)
    
    # Dork for signup pages
    time.sleep(5)
    x = requests.get(baseUrl + signupPages)
    search1 = re.search(noMatch1, x.content.decode('utf-8','ignore'))
    search2 = re.search(noMatch2, x.content.decode('utf-8','ignore'))
    search3 = re.search(captcha, x.content.decode('utf-8','ignore'))
    if search3:
        print(Fore.YELLOW + "Google's captcha interfered while dorking for signup pages at " + targetUrl + ". Please manually retry.")
        print(Fore.YELLOW + baseUrl + signupPages)
    elif search1 or search2:
        print(Style.RESET_ALL + "No signup pages found for " + targetUrl)
    else:
        print(Style.RESET_ALL + "Signup pages found:\n" + baseUrl + signupPages)

    # Dork for SQL errors
    time.sleep(5)
    x = requests.get(baseUrl + sqlErrors)
    search1 = re.search(noMatch1, x.content.decode('utf-8','ignore'))
    search2 = re.search(noMatch2, x.content.decode('utf-8','ignore'))
    search3 = re.search(captcha, x.content.decode('utf-8','ignore'))
    if search3:
        print(Fore.YELLOW + "Google's captcha interfered while dorking for SQL errors at " + targetUrl + ". Please manually retry.")
        print(Fore.YELLOW + baseUrl + sqlErrors)
    elif search1 or search2:
        print(Fore.GREEN + "No SQL errors found for " + targetUrl)
    else:
        print(Fore.RED + "SQL errors found - probable SQL injection points:\n" + baseUrl + sqlErrors)
    
    # Dork for PHP errors
    time.sleep(5) # Google always throttles the 10th request
    x = requests.get(baseUrl + phpErrors)
    search1 = re.search(noMatch1, x.content.decode('utf-8','ignore'))
    search2 = re.search(noMatch2, x.content.decode('utf-8','ignore'))
    search3 = re.search(captcha, x.content.decode('utf-8','ignore'))
    if search3:
        print(Fore.YELLOW + "Google's captcha interfered while dorking for PHP errors at " + targetUrl + ". Please manually retry.")
        print(Fore.YELLOW + baseUrl + phpErrors)
    elif search1 or search2:
        print(Fore.GREEN + "No PHP errors found for " + targetUrl)
    else:
        print(Fore.RED + "PHP errors found:\n" + baseUrl + phpErrors)
    
    # Dork for exposed phpinfo
    time.sleep(5)
    x = requests.get(baseUrl + phpinfo)
    search1 = re.search(noMatch1, x.content.decode('utf-8','ignore'))
    search2 = re.search(noMatch2, x.content.decode('utf-8','ignore'))
    search3 = re.search(captcha, x.content.decode('utf-8','ignore'))
    if search3:
        print(Fore.YELLOW + "Google's captcha interfered while dorking for phpinfo at " + targetUrl + ". Please manually retry.")
        print(Fore.YELLOW + baseUrl + phpinfo)
    elif search1 or search2:
        print(Fore.GREEN + "No exposed phpinfo found for " + targetUrl)
    else:
        print(Fore.RED + "Exposed phpinfo found:\n" + baseUrl + phpinfo)
    
    # Dork for pastebin matches
    time.sleep(5)
    x = requests.get(baseUrl + pastebin)
    search1 = re.search(noMatch1, x.content.decode('utf-8','ignore'))
    search2 = re.search(noMatch2, x.content.decode('utf-8','ignore'))
    search3 = re.search(captcha, x.content.decode('utf-8','ignore'))
    if search3:
        print(Fore.YELLOW + "Google's captcha interfered while dorking for pastebin matches at " + targetUrl + ". Please manually retry.")
        print(Fore.YELLOW + baseUrl + pastebin)
    elif search1 or search2:
        print(Style.RESET_ALL + "No pastebin matches found for " + targetUrl)
    else:
        print(Style.RESET_ALL + "Pastebin matches found:\n" + baseUrl + pastebin)
    
    # Dork for Microsoft GitHub matches
    time.sleep(5)
    x = requests.get(baseUrl + github)
    search1 = re.search(noMatch1, x.content.decode('utf-8','ignore'))
    search2 = re.search(noMatch2, x.content.decode('utf-8','ignore'))
    search3 = re.search(captcha, x.content.decode('utf-8','ignore'))
    if search3:
        print(Fore.YELLOW + "Google's captcha interfered while dorking for GitHub matches at " + targetUrl + ". Please manually retry.")
        print(Fore.YELLOW + baseUrl + github)
    elif search1 or search2:
        print(Style.RESET_ALL + "No GitHub matches found for " + targetUrl)
    else:
        print(Style.RESET_ALL + "GitHub matches found:\n" + baseUrl + github)
    
    # Dork for stackoverflow matches
    time.sleep(5)
    x = requests.get(baseUrl + stackoverflow)
    search1 = re.search(noMatch1, x.content.decode('utf-8','ignore'))
    search2 = re.search(noMatch2, x.content.decode('utf-8','ignore'))
    search3 = re.search(captcha, x.content.decode('utf-8','ignore'))
    if search3:
        print(Fore.YELLOW + "Google's captcha interfered while dorking for stackoverflow matches at " + targetUrl + ". Please manually retry.")
        print(Fore.YELLOW + baseUrl + stackoverflow)
    elif search1 or search2:
        print(Style.RESET_ALL + "No stackoverflow matches found for " + targetUrl)
    else:
        print(Style.RESET_ALL + "Stackoverflow matches found:\n" + baseUrl + stackoverflow)

def main():
    parser = argparse.ArgumentParser(description='Google Dork a list of URLs for goodies.')
    parser.add_argument('--file',help='Text file containing a list of URLs, preferably with the http/https portion removed',required=True)
    args = parser.parse_args()
    if args.file:
        with open(args.file) as f:
            for i in f.readlines():
                i = i.strip()
                dork(i)

if __name__=="__main__":
    main()
